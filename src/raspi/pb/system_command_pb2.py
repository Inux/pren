# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: system_command.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='system_command.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x14system_command.proto\"{\n\rSystemCommand\x12\x0f\n\x07\x63ommand\x18\x01 \x01(\t\x12*\n\x06phases\x18\x02 \x03(\x0b\x32\x1a.SystemCommand.PhasesEntry\x1a-\n\x0bPhasesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x08:\x02\x38\x01\x62\x06proto3')
)




_SYSTEMCOMMAND_PHASESENTRY = _descriptor.Descriptor(
  name='PhasesEntry',
  full_name='SystemCommand.PhasesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='SystemCommand.PhasesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='SystemCommand.PhasesEntry.value', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=102,
  serialized_end=147,
)

_SYSTEMCOMMAND = _descriptor.Descriptor(
  name='SystemCommand',
  full_name='SystemCommand',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='command', full_name='SystemCommand.command', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='phases', full_name='SystemCommand.phases', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_SYSTEMCOMMAND_PHASESENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24,
  serialized_end=147,
)

_SYSTEMCOMMAND_PHASESENTRY.containing_type = _SYSTEMCOMMAND
_SYSTEMCOMMAND.fields_by_name['phases'].message_type = _SYSTEMCOMMAND_PHASESENTRY
DESCRIPTOR.message_types_by_name['SystemCommand'] = _SYSTEMCOMMAND
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SystemCommand = _reflection.GeneratedProtocolMessageType('SystemCommand', (_message.Message,), dict(

  PhasesEntry = _reflection.GeneratedProtocolMessageType('PhasesEntry', (_message.Message,), dict(
    DESCRIPTOR = _SYSTEMCOMMAND_PHASESENTRY,
    __module__ = 'system_command_pb2'
    # @@protoc_insertion_point(class_scope:SystemCommand.PhasesEntry)
    ))
  ,
  DESCRIPTOR = _SYSTEMCOMMAND,
  __module__ = 'system_command_pb2'
  # @@protoc_insertion_point(class_scope:SystemCommand)
  ))
_sym_db.RegisterMessage(SystemCommand)
_sym_db.RegisterMessage(SystemCommand.PhasesEntry)


_SYSTEMCOMMAND_PHASESENTRY._options = None
# @@protoc_insertion_point(module_scope)
